#ifndef __APP_CONFIG_H
#define __APP_CONFIG_H

#include <driver/gpio.h>
#include <driver/spi_master.h>
#include <freertos/task.h>

// OS CONFIGS
#define BEACON_OS_NAME "BeaconOS"
#define BEACON_OS_DESC "Modern & Minimal Desktop Assistant Operation System"
#define BEACON_VERSION "v0.1.0 alpha"

// OS TIME CONFIG
#define SNTP_TIME_SERVER "time.google.com"
#define SNTP_TIME_ZONE "GMT-05:30"
#define SNTP_UPDATE_INTERVAL (60 * 60 * 1000) //in ms
#define SNTP_MAX_RETRY_COUNT 10

// FONTS
#define FONT_DIGITAL_32 0
#define FONT_DIGITAL_34 0
#define FONT_DIGITAL_36 0
#define FONT_DIGITAL_38 1
#define FONT_DIGITAL_40 0
#define FONT_DIGITAL_44 0
#define FONT_DIGITAL_48 0
#define FONT_DIGITAL_54 0
#define FONT_DIGITAL_64 1

#define FONT_DSEG14_MODERN_64_BOLD 0
#define FONT_DSEG14_MODERN_64 0
#define FONT_DSEG14_MODERN_54 0
#define FONT_DSEG14_MODERN_48 0
#define FONT_DSEG14_MODERN_40 1
#define FONT_DSEG14_MODERN_36 0
#define FONT_DSEG14_MODERN_32 0
#define FONT_DSEG14_MODERN_28 0
#define FONT_DSEG14_MODERN_18 1


// WS2812B LED DRIVER CONFIGS
#define DRIVER_WS2812B_DIN GPIO_NUM_21
#define DRIVER_WS2812B_SPI_HOST SPI2_HOST
#define DRIVER_WS2812B_SPI_DMA_CH SPI_DMA_CH_AUTO
#define DRIVER_WS2812B_LED_COUNT SPI_DMA_CH_AUTO

// ST7789 LCD DRIVER CONFIGS
#define DRIVER_ST7789_VRES 240
#define DRIVER_ST7789_HRES 240
#define DRIVER_ST7789_MOSI GPIO_NUM_11
#define DRIVER_ST7789_SCLK GPIO_NUM_12
#define DRIVER_ST7789_DC GPIO_NUM_36
#define DRIVER_ST7789_RST GPIO_NUM_35
#define DRIVER_ST7789_BCLK GPIO_NUM_37
#define DRIVER_ST7789_SPI_HOST SPI3_HOST

// ROTARY ENCODER DRIVER CONFIGS
#define DRIVER_ROT_ENCODER_A GPIO_NUM_33
#define DRIVER_ROT_ENCODER_B GPIO_NUM_34
#define DRIVER_ROT_ENCODER_SW GPIO_NUM_NC

// WIFI CONFIGS
#define WIFI_MAX_RETRY 25
#define WIFI_CONNECTED_BIT BIT0
#define WIFI_FAIL_BIT BIT1


// GUI CONFIGS
// BOOT SCREEN
#define GUI_BOOT_LOADING_CIRCLES_COUNT 6

// BAISC APP DELAY MACROS
#define app_delay_ms(x) vTaskDelay((x)/portTICK_PERIOD_MS)
#define app_delay_sec(x) app_delay_ms((x)*1000)
#define app_delay_min(x) app_delay_sec((x)*60)
#define app_delay_hrs(x) app_delay_min((x)*60)

#endif